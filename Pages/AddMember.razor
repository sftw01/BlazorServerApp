@using BlazorServerApp.Models;
@using BlazorServerApp.Services
@inject IMemberService memberService;
@inject NavigationManager navigationManager;

@page "/add-member"

<h3>AddMember</h3>

@* <EditForm Model="@member" OnSubmit="SaveMember"> *@   @* OnSubmit metyhod will be check valid form, in case when is not valid, adding procedure will be excecuted *@
<EditForm Model="@member" OnValidSubmit="SaveMember">   @*in this case adding object will be executed only when form is valid*@
    <DataAnnotationsValidator></DataAnnotationsValidator>

    <ValidationMessage For="@(() => member.MemberName)"></ValidationMessage>
    <InputText class="form-control" placeholder="Name" @bind-Value="@member.MemberName"></InputText><br />

    <ValidationMessage For="@(() => member.Email)"></ValidationMessage>
    <InputText class="form-control" placeholder="Email" @bind-Value="@member.Email"></InputText><br />

    <InputNumber class="form-control" placeholder="Age" @bind-Value="@member.Age"></InputNumber><br />
    <InputDate class="form-control" placeholder="Joining date" @bind-Value="member.JoiningDate"></InputDate><br />

    <button class="btn btn-primary" type="submit">Save Member</button>

</EditForm>

@code {
    private MemberViewModel member;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        member = new MemberViewModel();
        member.JoiningDate = DateTime.UtcNow;
        //member.JoiningDate = DateTime.SpecifyKind(member.JoiningDate, DateTimeKind.Utc);
    }


    private void SaveMember()
    {
        memberService.AddMember(new Member
        {
            MemberName = member.MemberName,
            Email = member.Email,
            Age = member.Age,
            JoiningDate = member.JoiningDate
        });

        navigationManager.NavigateTo("./memberlist");

    }
}
