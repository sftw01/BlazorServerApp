@using BlazorServerApp.Shared;

@using BlazorServerApp.Services;
@inject IMemberService memberService;


<th scope="row">@IdCount</th>
<td>@Member.Id</td>
<td>@Member.MemberName</td>
<td>@Member.Email</td>
<td>@Member.Age</td>
<td>@Member.JoiningDate</td>
<td>
    <button @onclick="DeletePermision" class="btn btn-danger">Delete</button>
    <button @onclick="Edit" class="btn btn-info">Edit</button>
</td>

<ModalAddContact @ref="modalAddContact" member="_member"></ModalAddContact>
<ModalDeleteMember @ref="modalDeleteMember" OnConfirmed="DeleteExecute"></ModalDeleteMember>


@code {
    [Parameter]
    public int IdCount { get; set; }            //for show next numeer in table

    [Parameter]
    public Member Member { get; set; }
    //
    public Member _member = new Member();

    [Parameter]
    public EventCallback<int> DeleteMember { get; set; }

    //pass parameter to ModalDeleteMember
    ModalDeleteMember modalDeleteMember = new ModalDeleteMember();


    private void DeletePermision()
    {
        modalDeleteMember.Show();
        modalDeleteMember.MemberToDelete = Member;
        //memberService.Delete(Member.Id);

        //DeleteMember.InvokeAsync(Member.Id);
    }

    private void DeleteExecute(Member member)
    {
        if (member != null)
        {
            memberService.Delete(member.Id);
        }
        DeleteMember.InvokeAsync(Member.Id);
    }

    public ModalAddContact modalAddContact = new ModalAddContact();

    private void Edit()
    {
        modalAddContact.member.MemberName = Member.MemberName;
        modalAddContact.member.Email = Member.Email;
        modalAddContact.member.Age = Member.Age;
        modalAddContact.Show();

    }

    protected override void OnInitialized()
    {
        _member = Member;

        base.OnInitialized();
    }

}
