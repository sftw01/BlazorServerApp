
@page "/memberlist"

@using BlazorServerApp.Services;
@using BlazorServerApp.Seeder;
@inject IMemberService memberService;
@inject MemberListSeeder memberSeed;
@inject NavigationManager navigationManager;

<h3>MemberList</h3>

<button @onclick="AddMemberFoo" type="button" class="btn btn-success">Add Member</button>
<button @onclick="DeleteAll" type="button" class="btn btn-danger">Delete All</button>
<button @onclick="MemberSeed" type="button" class="btn btn-secondary">Member seed</button>
<input @bind="@MemberCount" />


@if (memberList.Count == 0 || memberList == null)
{
    <style>
        .centered-text {
            text-align: center; /* Wyśrodkowanie tekstu */
            font-size: 2em; /* Zwiększenie rozmiaru czcionki */
            color: tomato; /* Zmiana koloru tekstu na pomarańczowy (Tomato) */
            font-weight: bold; /* Opcjonalnie - pogrubienie tekstu */
            padding: 20px; /* Opcjonalnie - dodanie paddingu */
        }
    </style>

    <p class="centered-text">No members to display</p>

}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Name</th>
                <th scope="col">Email</th>
                <th scope="col">Age</th>
                <th scope="col">Joining date</th>
                <th scope="col">Delete</th>
            </tr>
        </thead>
        @foreach (var member in memberList)
        {
            <tr>
                <MemberDetail Member="@member" DeleteMember="RefreshPage"></MemberDetail>
            </tr>
        }
    </table>
}



@code {
    public int MemberCount=1;
    private List<Member> memberList;


    protected override void OnInitialized()
    {
        memberList = memberService.GetAll();
        base.OnInitialized();
    }

    public void DeleteAll()
    {
        memberService.DeleteAll();
        navigationManager.NavigateTo("./memberlist", true);
        //StateHasChanged();
    }

    public void AddMemberFoo()
    {
        navigationManager.NavigateTo("./add-member");

    }
    //to refresh page after deleting member
    public void RefreshPage(int Id)
    {
        //memberList = memberService.GetAll();

        memberList.RemoveAll(x => x.Id == Id);

        //navigationManager.NavigateTo("./memberlist", true);
        //StateHasChanged();
    }

    private void MemberSeed()
    {
        memberSeed.Seed(MemberCount);
        navigationManager.NavigateTo("./memberlist", true);
    }


}
